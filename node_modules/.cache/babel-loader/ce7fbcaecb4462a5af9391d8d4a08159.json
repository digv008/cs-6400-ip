{"ast":null,"code":"var _jsxFileName = \"/Users/digvijaygholap/Fall_2020/CS6440/Individual_Project/covid19-riskfactors-app/src/Containers/SecondaryQuestionContainer.js\";\nimport React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nexport class SecondaryQuestionContainer extends Component {\n  render() {\n    let {\n      rowData,\n      setColor,\n      questionTitle,\n      state,\n      currentParentState,\n      parentStateName,\n      handleYNClick,\n      showOtherLabel,\n      handleButtonRelease,\n      handleButtonPress\n    } = this.props;\n    let bgcolor = setColor(rowData.ratio, rowData.stateName, rowData.protective);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n      className: \"rowInForm\",\n      style: currentParentState ? {\n        backgroundColor: bgcolor,\n        border: \".25px solid rgb(92, 87, 87)\"\n      } : {\n        backgroundColor: bgcolor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 29\n      }\n    }, questionTitle)), /*#__PURE__*/React.createElement(Col, {\n      onTouchStart: handleButtonPress,\n      onTouchEnd: handleButtonRelease,\n      onMouseDown: handleButtonPress,\n      onMouseUp: handleButtonRelease,\n      onMouseLeave: handleButtonRelease,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }\n    }, \" \", state[parentStateName + \"Yes\"] || state[parentStateName + \"No\"] ? showOtherLabel ? rowData.ratio : rowData.ratioTitle : null)), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n      type: \"radio\",\n      name: \"studyOptions\",\n      value: currentParentState,\n      onChange: val => {\n        handleYNClick(parentStateName, val);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ToggleButton, {\n      variant: state[parentStateName + \"Yes\"] ? \"dark\" : \"outline-dark\",\n      value: \"Y\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 33\n      }\n    }, \"Y\"), /*#__PURE__*/React.createElement(ToggleButton, {\n      variant: state[parentStateName + \"No\"] ? \"dark\" : \"outline-dark\",\n      value: \"N\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 33\n      }\n    }, \"N\"))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/digvijaygholap/Fall_2020/CS6440/Individual_Project/covid19-riskfactors-app/src/Containers/SecondaryQuestionContainer.js"],"names":["React","Component","Container","Row","Col","ToggleButtonGroup","ToggleButton","SecondaryQuestionContainer","render","rowData","setColor","questionTitle","state","currentParentState","parentStateName","handleYNClick","showOtherLabel","handleButtonRelease","handleButtonPress","props","bgcolor","ratio","stateName","protective","backgroundColor","border","ratioTitle","val"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,OAAO,MAAMC,0BAAN,SAAyCN,SAAzC,CAAmD;AAEtDO,EAAAA,MAAM,GAAG;AACL,QAAI;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,QAAX;AAAqBC,MAAAA,aAArB;AAAoCC,MAAAA,KAApC;AAA2CC,MAAAA,kBAA3C;AAA+DC,MAAAA,eAA/D;AAAgFC,MAAAA,aAAhF;AAA+FC,MAAAA,cAA/F;AAA+GC,MAAAA,mBAA/G;AAAoIC,MAAAA;AAApI,QAA0J,KAAKC,KAAnK;AACA,QAAIC,OAAO,GAAGV,QAAQ,CAACD,OAAO,CAACY,KAAT,EAAgBZ,OAAO,CAACa,SAAxB,EAAmCb,OAAO,CAACc,UAA3C,CAAtB;AAEA,wBACI,uDACI,oBAAC,SAAD;AACI,MAAA,SAAS,EAAC,WADd;AAEI,MAAA,KAAK,EACDV,kBAAkB,GACd;AACIW,QAAAA,eAAe,EAAEJ,OADrB;AAEIK,QAAAA,MAAM,EAAE;AAFZ,OADc,GAKd;AACID,QAAAA,eAAe,EAAEJ;AADrB,OARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAYI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIT,aAAJ,CADJ,CADJ,eAII,oBAAC,GAAD;AACI,MAAA,YAAY,EAAEO,iBADlB;AAEI,MAAA,UAAU,EAAED,mBAFhB;AAGI,MAAA,WAAW,EAAEC,iBAHjB;AAII,MAAA,SAAS,EAAED,mBAJf;AAKI,MAAA,YAAY,EAAEA,mBALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAML,KAAK,CAACE,eAAe,GAAG,KAAnB,CAAL,IAAkCF,KAAK,CAACE,eAAe,GAAG,IAAnB,CAAxC,GACCE,cAAc,GACVP,OAAO,CAACY,KADE,GAEVZ,OAAO,CAACiB,UAHb,GAIC,IAJN,CAPJ,CAJJ,eAiBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,iBAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,IAAI,EAAC,cAFT;AAGI,MAAA,KAAK,EAAEb,kBAHX;AAII,MAAA,QAAQ,EACHc,GAAD,IAAS;AACLZ,QAAAA,aAAa,CAACD,eAAD,EAAkBa,GAAlB,CAAb;AACH,OAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASI,oBAAC,YAAD;AACI,MAAA,OAAO,EAAEf,KAAK,CAACE,eAAe,GAAG,KAAnB,CAAL,GAAiC,MAAjC,GAA0C,cADvD;AAEI,MAAA,KAAK,EAAE,GAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WATJ,eAaI,oBAAC,YAAD;AACI,MAAA,OAAO,EAAEF,KAAK,CAACE,eAAe,GAAG,IAAnB,CAAL,GAAgC,MAAhC,GAAyC,cADtD;AAEI,MAAA,KAAK,EAAE,GAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAbJ,CADJ,CAjBJ,CAZJ,CADJ,CADJ;AAuDH;;AA7DqD","sourcesContent":["import React, { Component } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\n\nexport class SecondaryQuestionContainer extends Component {\n\n    render() {\n        let { rowData, setColor, questionTitle, state, currentParentState, parentStateName, handleYNClick, showOtherLabel, handleButtonRelease, handleButtonPress } = this.props\n        let bgcolor = setColor(rowData.ratio, rowData.stateName, rowData.protective)\n\n        return (\n            <>\n                <Container\n                    className=\"rowInForm\"\n                    style={\n                        currentParentState ?\n                            {\n                                backgroundColor: bgcolor,\n                                border: \".25px solid rgb(92, 87, 87)\"\n                            } :\n                            {\n                                backgroundColor: bgcolor,\n                            }}\n                >\n                    <Row>\n                        <Col>\n                            <p>{questionTitle}</p>\n                        </Col>\n                        <Col\n                            onTouchStart={handleButtonPress}\n                            onTouchEnd={handleButtonRelease}\n                            onMouseDown={handleButtonPress}\n                            onMouseUp={handleButtonRelease}\n                            onMouseLeave={handleButtonRelease}\n                        >\n                            <p> {(state[parentStateName + \"Yes\"] || state[parentStateName + \"No\"])\n                                ? showOtherLabel\n                                    ? rowData.ratio\n                                    : rowData.ratioTitle\n                                : null}</p>\n                        </Col>\n                        <Col>\n                            <ToggleButtonGroup\n                                type=\"radio\"\n                                name=\"studyOptions\"\n                                value={currentParentState}\n                                onChange={\n                                    (val) => {\n                                        handleYNClick(parentStateName, val)\n                                    }}\n                            >\n                                <ToggleButton\n                                    variant={state[parentStateName + \"Yes\"] ? \"dark\" : \"outline-dark\"}\n                                    value={\"Y\"}\n                                >Y</ToggleButton>\n                                <ToggleButton\n                                    variant={state[parentStateName + \"No\"] ? \"dark\" : \"outline-dark\"}\n                                    value={\"N\"}\n                                >N</ToggleButton>\n                            </ToggleButtonGroup>\n                        </Col>\n                    </Row>\n                </Container>\n            </>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}