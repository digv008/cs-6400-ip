{"ast":null,"code":"var _jsxFileName = \"/Users/digvijaygholap/Documents/GitHub/Individual_Project_CS6400/src/Containers/FormRowContainer.js\";\nimport React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport { SecondaryQuestionContainer as SecondaryQuestion } from './SecondaryQuestionContainer';\nexport class FormRowContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showOtherLabel: false\n    };\n\n    this.handleButtonRelease = event => {\n      this.setState({\n        showOtherLabel: false\n      });\n    };\n\n    this.handleButtonPress = event => {\n      this.setState({\n        showOtherLabel: true\n      });\n    };\n  }\n\n  render() {\n    let {\n      rowData,\n      currentParentState,\n      handleClick,\n      handleYNClick,\n      setColor\n    } = this.props;\n    let bgcolor = setColor(rowData.ratio, rowData.stateName, rowData.protective);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, rowData.ratio.includes(\"?\") ? /*#__PURE__*/React.createElement(Container, {\n      className: \"rowInForm\",\n      style: currentParentState ? {\n        backgroundColor: bgcolor,\n        top: \"200%\",\n        paddingTop: \"2.5rem\",\n        border: \"darkyellow 1px solid\"\n      } : {\n        backgroundColor: bgcolor,\n        top: \"10%\",\n        paddingTop: \"0.5rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 33\n      }\n    }, rowData.title)), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 36\n      }\n    }, \" \", currentParentState ? \" \" : null))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n      type: \"checkbox\",\n      name: \"studyOptions\",\n      value: currentParentState,\n      onChange: value => {\n        handleClick(rowData.stateName, value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ToggleButton, {\n      variant: currentParentState ? \"dark\" : \"outline-dark\",\n      value: \"â—˜\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 37\n      }\n    }, \"\\u25D8\")))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, currentParentState ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SecondaryQuestion, {\n      handleClick: handleClick,\n      questionTitle: rowData.secondaryQuestion.title,\n      rowData: this.props.state[rowData.stateName + \"Yes\"] ? rowData.secondaryQuestion.yes : rowData.secondaryQuestion.no,\n      parentStateName: rowData.stateName,\n      currentParentState: currentParentState,\n      handleButtonRelease: this.handleButtonRelease,\n      handleButtonPress: this.handleButtonPress,\n      handleYNClick: handleYNClick,\n      showOtherLabel: this.state.showOtherLabel,\n      setColor: setColor,\n      state: this.props.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 37\n      }\n    })) : null)) :\n    /*#__PURE__*/\n    /////////////////// this is for the non-exceptions /////////////////\n    React.createElement(Container, {\n      className: \"rowInForm\",\n      style: currentParentState ? {\n        backgroundColor: bgcolor,\n        border: \".3px solid rgb(50, 80, 70)\"\n      } : {\n        backgroundColor: bgcolor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }\n    }, rowData.title)), /*#__PURE__*/React.createElement(Col, {\n      onTouchStart: this.handleButtonPress,\n      onTouchEnd: this.handleButtonRelease //onMouseDown={this.handleButtonPress}\n      ,\n      onMouseUp: this.handleButtonRelease //onMouseLeave={this.handleButtonRelease}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 33\n      }\n    }, \" \", currentParentState ? this.state.showOtherLabel ? rowData.ratio : rowData.ratioTitle : null)), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ToggleButtonGroup, {\n      type: \"checkbox\",\n      name: \"studyOptions\",\n      value: currentParentState,\n      onChange: value => {\n        handleClick(rowData.stateName, value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(ToggleButton, {\n      variant: currentParentState ? \"dark\" : \"outline-medium\",\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 41\n      }\n    }, \"SELECT\"))))));\n  }\n\n}\nexport default FormRowContainer;","map":{"version":3,"sources":["/Users/digvijaygholap/Documents/GitHub/Individual_Project_CS6400/src/Containers/FormRowContainer.js"],"names":["React","Component","Container","Row","Col","ToggleButtonGroup","ToggleButton","SecondaryQuestionContainer","SecondaryQuestion","FormRowContainer","state","showOtherLabel","handleButtonRelease","event","setState","handleButtonPress","render","rowData","currentParentState","handleClick","handleYNClick","setColor","props","bgcolor","ratio","stateName","protective","includes","backgroundColor","top","paddingTop","border","title","value","secondaryQuestion","yes","no","ratioTitle"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport { SecondaryQuestionContainer as SecondaryQuestion } from './SecondaryQuestionContainer';\n\nexport class FormRowContainer extends Component {\n\n    state = {\n        showOtherLabel: false\n    }\n\n    handleButtonRelease = (event) => {\n        this.setState({\n            showOtherLabel: false\n        })\n    }\n\n    handleButtonPress = (event) => {\n        this.setState({\n            showOtherLabel: true\n        })\n    }\n\n    render() {\n        let { rowData, currentParentState, handleClick, handleYNClick, setColor } = this.props\n\n        let bgcolor = setColor(rowData.ratio, rowData.stateName, rowData.protective)\n        return (\n            <>\n                {rowData.ratio.includes(\"?\")\n                    ?\n                    <Container\n                        className=\"rowInForm\"\n                        style={\n                            currentParentState ?\n                                {\n                                    backgroundColor: bgcolor,\n                                    top: \"200%\",\n                                    paddingTop: \"2.5rem\",\n                                    border: \"darkyellow 1px solid\"\n                                }\n                                :\n                                {\n                                    backgroundColor: bgcolor,\n                                    top: \"10%\",\n                                    paddingTop: \"0.5rem\",\n                                }\n                        }\n                    >\n                        <Row>\n                            <Col>\n                                <p>{rowData.title}</p>\n                            </Col>\n                            <Col>\n                                <p><strong> {currentParentState ? \" \" : null}</strong></p>\n                            </Col>\n                            <Col>\n                                <ToggleButtonGroup\n                                    type=\"checkbox\"\n                                    name=\"studyOptions\"\n                                    value={currentParentState}\n                                    onChange={(value) => {\n                                        handleClick(rowData.stateName, value)\n                                    }}\n                                >\n                                    <ToggleButton\n                                        variant={currentParentState ? \"dark\" : \"outline-dark\"}\n                                        value={\"â—˜\"}\n                                    >â—˜</ToggleButton>\n                                </ToggleButtonGroup>\n                            </Col>\n                        </Row>\n                        <Row>\n                            {currentParentState\n                                ?\n                                <>\n                                    {/* depending on the row, conditionally render the correct data */}\n                                    <SecondaryQuestion\n                                        handleClick={handleClick}\n                                        questionTitle={rowData.secondaryQuestion.title}\n                                        rowData={\n                                            this.props.state[rowData.stateName + \"Yes\"] ?\n                                                rowData.secondaryQuestion.yes : rowData.secondaryQuestion.no}\n                                        parentStateName={rowData.stateName}\n                                        currentParentState={currentParentState}\n                                        handleButtonRelease={this.handleButtonRelease}\n                                        handleButtonPress={this.handleButtonPress}\n                                        handleYNClick={handleYNClick}\n                                        showOtherLabel={this.state.showOtherLabel}\n                                        setColor={setColor}\n                                        state={this.props.state}\n                                    />\n                                </>\n                                : null}\n                        </Row>\n                    </Container>\n                    : /////////////////// this is for the non-exceptions /////////////////\n                    <Container\n                        className=\"rowInForm\"\n                        style={\n                            currentParentState ?\n                                {\n                                    backgroundColor: bgcolor,\n                                    border: \".3px solid rgb(50, 80, 70)\"\n                                } :\n                                {\n                                    backgroundColor: bgcolor,\n                                }}\n                    >\n                        <Row>\n                            <Col>\n                                <p>{rowData.title}</p>\n                            </Col>\n                            <Col\n                                onTouchStart={this.handleButtonPress}\n                                onTouchEnd={this.handleButtonRelease}\n                                //onMouseDown={this.handleButtonPress}\n                                onMouseUp={this.handleButtonRelease}\n                                //onMouseLeave={this.handleButtonRelease}\n                            >\n                                <p> {currentParentState\n                                    ? this.state.showOtherLabel\n                                        ? rowData.ratio\n                                        : rowData.ratioTitle\n                                    : null}</p>\n                            </Col>\n                            <Col>\n                                {\n                                    <ToggleButtonGroup\n                                        type=\"checkbox\"\n                                        name=\"studyOptions\"\n                                        value={currentParentState}\n                                        onChange={(value) => {\n                                            handleClick(rowData.stateName, value)\n                                        }}\n                                    >\n                                        <ToggleButton\n                                            variant={currentParentState ? \"dark\" : \"outline-medium\"}\n                                            value={\"\"}\n                                        >SELECT</ToggleButton>\n                                    </ToggleButtonGroup>\n                                }\n                            </Col>\n                        </Row>\n                    </Container>\n                }\n            </>\n        )\n    }\n}\n\nexport default FormRowContainer\n\n\n"]},"metadata":{},"sourceType":"module"}