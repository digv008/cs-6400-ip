{"ast":null,"code":"var _jsxFileName = \"/Users/digvijaygholap/Documents/GitHub/Individual_Project_CS6400/src/Containers/MainContainer.js\";\nimport React, { Component } from 'react';\nimport SortContainer from './SortContainer';\nimport FormContainer from './FormContainer';\nimport Button from 'react-bootstrap/Button';\nimport StudyLegend from '../Components/StudyLegend';\nimport { ardsStudy, mortalityStudy, icuStudy } from '../studies.js';\nimport { mortality, ards, ardsDeath, icu } from '../data.js';\nexport class MainContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showStudyLegend: true,\n      showHowTo: true,\n      displayValue: \"ICU\",\n      counter: 0,\n      data: icu,\n      hypertension: false,\n      age: false,\n      covidExposure: false,\n      diabetes: false,\n      cad: false,\n      dyspnea: false,\n      temp: false,\n      sofa: false,\n      leuko: false,\n      lympho: false,\n      ddimer: false,\n      ferritin: false,\n      ldh: false,\n      plateles: false,\n      pt: false,\n      procal: false,\n      cr: false,\n      hstrop: false,\n      hscrp: false,\n      albumin: false,\n      bilirubin: false,\n      alt40: false,\n      ast: false,\n      astalt: false,\n      urea: false,\n      glucose: false,\n      il6: false,\n      alt40Yes: false,\n      alt40No: false,\n      astYes: false,\n      astNo: false,\n      dyspneaYes: false,\n      dyspneaNo: false,\n      leukoYes: false,\n      leukoNo: false,\n      ddimerYes: false,\n      ddimerNo: false,\n      ferritinYes: false,\n      ferritinNo: false,\n      ldhYes: false,\n      ldhNo: false,\n      ptYes: false,\n      ptNo: false,\n      crYes: false,\n      crNo: false,\n      hstropYes: false,\n      hstropNo: false,\n      tempYes: false,\n      tempNo: false,\n      ageYes: false,\n      ageNo: false,\n      procalYes: false,\n      procalNo: false\n    };\n\n    this.prepareProps = () => {\n      let selected = this.state.displayValue;\n\n      if (selected === \"Mortality\") {\n        return mortalityStudy;\n      } else if (selected === \"ICU\") {\n        return icuStudy;\n      } else {\n        return ardsStudy;\n      }\n    };\n\n    this.toggleShow = componentName => {\n      let slug = \"show\" + componentName;\n      this.setState(prevState => {\n        return {\n          [slug]: !prevState[slug]\n        };\n      });\n    };\n\n    this.setColor = (ratio, stateName, protective = false) => {\n      let bgcolor = \"white\";\n\n      if (this.state[stateName]) {\n        switch (ratio) {\n          case \"?\":\n            break;\n\n          case \"Insignificant\":\n          case \"Excluded\":\n            bgcolor = \"lightgrey\";\n            break;\n\n          default:\n            bgcolor = protective ? \"lightgrey\" : \"lightgrey\";\n        }\n      }\n\n      return bgcolor;\n    };\n\n    this.handleYNClick = (title, value) => {\n      let yes = title + \"Yes\";\n      let no = title + \"No\";\n      let points;\n      let element = this.state.data[0][1].find(element => element.stateName === title) || this.state.data[1][1].find(element => element.stateName === title);\n\n      if (value === \"Y\") {\n        points = element.pointsNo * -1 + element.pointsYes;\n\n        if (this.state[no] === true) {\n          this.setState(prevState => {\n            return {\n              [title]: true,\n              [yes]: true,\n              [no]: false,\n              counter: prevState.counter + points\n            };\n          }, () => console.log(`state of ${title}`, this.state[title], `state of ${no}`, this.state[no], `state of ${yes}`, this.state[yes]));\n        } else if (this.state[yes] === true) {\n          points = element.pointsYes * -1;\n          this.setState(prevState => {\n            return {\n              [title]: false,\n              [yes]: false,\n              [no]: false,\n              counter: prevState.counter + points\n            };\n          }, () => console.log(`state of ${title}`, this.state[title], `state of ${no}`, this.state[no], `state of ${yes}`, this.state[yes]));\n        } else if (this.state[yes] === false) {\n          points = element.pointsYes;\n          this.setState(prevState => {\n            return {\n              [title]: true,\n              [yes]: true,\n              [no]: false,\n              counter: prevState.counter + points\n            };\n          }, () => console.log(`state of ${title}`, this.state[title], `state of ${no}`, this.state[no], `state of ${yes}`, this.state[yes]));\n        } else {\n          console.log(\"iossue\");\n        }\n      } else if (value === \"N\") {\n        if (this.state[no] === true) {\n          points = element.pointsNo * -1;\n          this.setState(prevState => {\n            return {\n              [title]: false,\n              [yes]: false,\n              [no]: false,\n              counter: prevState.counter + points\n            };\n          }, () => console.log(`state of ${title}`, this.state[title], `state of ${no}`, this.state[no], `state of ${yes}`, this.state[yes]));\n        } else if (this.state[yes] === true) {\n          points = element.pointsYes * -1 + element.pointsNo;\n          this.setState(prevState => {\n            return {\n              [title]: true,\n              [yes]: false,\n              [no]: true,\n              counter: prevState.counter + points\n            };\n          }, () => console.log(`state of ${title}`, this.state[title], `state of ${no}`, this.state[no], `state of ${yes}`, this.state[yes]));\n        } else if (this.state[yes] === false) {\n          points = element.pointsNo;\n          this.setState(prevState => {\n            return {\n              [title]: true,\n              [yes]: false,\n              [no]: true,\n              counter: prevState.counter + points\n            };\n          }, () => console.log(`state of ${title}`, this.state[title], `state of ${no}`, this.state[no], `state of ${yes}`, this.state[yes]));\n        } else {\n          console.log(\"problem with the conditional on N branch\");\n        }\n      }\n    };\n\n    this.handleClick = (title, value) => {\n      let points;\n      const element = this.state.data.flat().flat().find(element => element.stateName === title);\n\n      if (value[0] === false || value[0] === \"undefined\") {\n        if (typeof element.points === \"undefined\" || isNaN(element.points)) {\n          points = 0;\n        } else {\n          points = element.points;\n        }\n      } else {\n        //unclicked\n        if (typeof element.points === \"undefined\" || isNaN(element.points)) {\n          points = 0;\n        } else {\n          //its child is clicked\n          if (this.state[title + \"Yes\"]) {\n            points = element.pointsYes * -1;\n          } else if (this.state[title + \"No\"]) {\n            points = element.pointsNo * -1;\n          } else {\n            points = element.points * -1;\n          }\n        }\n      }\n\n      if (isNaN(points)) {\n        points = 0;\n      }\n\n      this.setState(prevState => {\n        return {\n          [title + \"Yes\"]: prevState[title + \"Yes\"] && !prevState[title],\n          //changes the child's state based on the parent's\n          [title + \"No\"]: prevState[title + \"No\"] && !prevState[title],\n          [title]: !prevState[title],\n          counter: prevState.counter + points\n        };\n      });\n    };\n\n    this.handleDisplay = newdisplayValue => {\n      if (newdisplayValue === \"Mortality\") {\n        this.setState({\n          displayValue: newdisplayValue,\n          data: mortality\n        }, () => this.calculateCount(this.state.data, this.state, [\"dyspneaYes\", \"leukoYes\", \"ddimerYes\", \"ferritinYes\", \"ldhYes\", \"ptYes\", \"crYes\", \"hstropYes\", \"alt40Yes\"]));\n      } else if (newdisplayValue === \"ICU\") {\n        this.setState({\n          displayValue: newdisplayValue,\n          data: icu\n        }, () => this.calculateCount(this.state.data, this.state, [\"procalYes\"]));\n      } else if (newdisplayValue === \"ARDS\") {\n        this.setState({\n          displayValue: newdisplayValue,\n          data: ards\n        }, () => this.calculateCount(this.state.data, this.state, [\"ageYes\", \"tempYes\", \"astYes\"]));\n      } else {\n        this.setState({\n          displayValue: newdisplayValue,\n          data: ardsDeath\n        }, () => this.calculateCount(this.state.data, this.state, [\"ageYes\", \"ardsDeath_tempYes\", \"astYes\"]));\n      }\n    };\n\n    this.calculateCount = (data, state, secondaryStates) => {\n      let count = 0;\n      data[0][1].map(factor => {\n        return count = count + (state[factor.stateName] ? factor.points : 0);\n      });\n      data[1][1].map(factor => {\n        return count = count + (state[factor.stateName] ? factor.points : 0);\n      });\n      secondaryStates.map(factor => {\n        if (factor === \"ardsDeath_tempYes\") {\n          return count = count + (state[\"tempYes\"] ? -1 : 0);\n        } else {\n          return count = count + (state[factor] ? 1 : 0);\n        }\n      });\n      this.setState({\n        counter: count\n      });\n    };\n\n    this.numberOfLabs = () => {\n      let basicNumber = this.state.data[0][1].filter(object => !object.ratio.includes(\"Excluded\") && !object.ratio.includes(\"Insignificant\")).length;\n      let advancedNumber = this.state.data[1][1].filter(object => !object.ratio.includes(\"Excluded\") && !object.ratio.includes(\"Insignificant\")).length;\n      let sum = basicNumber + advancedNumber;\n      return sum;\n    };\n  }\n\n  render() {\n    let {\n      counter,\n      displayValue,\n      data\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SortContainer, {\n      handleDisplay: this.handleDisplay,\n      counter: counter,\n      selected: displayValue,\n      sum: this.numberOfLabs(),\n      toggleShow: this.toggleShow,\n      showHowTo: this.state.showHowTo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(FormContainer, {\n      basicData: data[0][1],\n      advancedData: data[1][1],\n      handleClick: this.handleClick,\n      handleYNClick: this.handleYNClick,\n      state: this.state,\n      setColor: this.setColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }\n    }), this.state.showStudyLegend ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StudyLegend, {\n      study: this.prepareProps(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"link\",\n      onClick: () => this.toggleShow(\"StudyLegend\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 29\n      }\n    }, \"Hide Legend\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"link\",\n      onClick: () => this.toggleShow(\"StudyLegend\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 29\n      }\n    }, \"Show Legend\")));\n  }\n\n}\nexport default MainContainer;","map":{"version":3,"sources":["/Users/digvijaygholap/Documents/GitHub/Individual_Project_CS6400/src/Containers/MainContainer.js"],"names":["React","Component","SortContainer","FormContainer","Button","StudyLegend","ardsStudy","mortalityStudy","icuStudy","mortality","ards","ardsDeath","icu","MainContainer","state","showStudyLegend","showHowTo","displayValue","counter","data","hypertension","age","covidExposure","diabetes","cad","dyspnea","temp","sofa","leuko","lympho","ddimer","ferritin","ldh","plateles","pt","procal","cr","hstrop","hscrp","albumin","bilirubin","alt40","ast","astalt","urea","glucose","il6","alt40Yes","alt40No","astYes","astNo","dyspneaYes","dyspneaNo","leukoYes","leukoNo","ddimerYes","ddimerNo","ferritinYes","ferritinNo","ldhYes","ldhNo","ptYes","ptNo","crYes","crNo","hstropYes","hstropNo","tempYes","tempNo","ageYes","ageNo","procalYes","procalNo","prepareProps","selected","toggleShow","componentName","slug","setState","prevState","setColor","ratio","stateName","protective","bgcolor","handleYNClick","title","value","yes","no","points","element","find","pointsNo","pointsYes","console","log","handleClick","flat","isNaN","handleDisplay","newdisplayValue","calculateCount","secondaryStates","count","map","factor","numberOfLabs","basicNumber","filter","object","includes","length","advancedNumber","sum","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport SortContainer from './SortContainer';\nimport FormContainer from './FormContainer';\nimport Button from 'react-bootstrap/Button'\nimport StudyLegend from '../Components/StudyLegend'\nimport { ardsStudy, mortalityStudy, icuStudy } from '../studies.js'\nimport { mortality, ards, ardsDeath, icu } from '../data.js'\n\nexport class MainContainer extends Component {\n\n    state = {\n        showStudyLegend: true,\n        showHowTo: true,\n        displayValue: \"ICU\",\n        counter: 0,\n        data: icu,\n        hypertension: false,\n        age: false,\n        covidExposure: false,\n        diabetes: false,\n        cad: false,\n        dyspnea: false,\n        temp: false,\n        sofa: false,\n        leuko: false,\n        lympho: false,\n        ddimer: false,\n        ferritin: false,\n        ldh: false,\n        plateles: false,\n        pt: false,\n        procal: false,\n        cr: false,\n        hstrop: false,\n        hscrp: false,\n        albumin: false,\n        bilirubin: false,\n        alt40: false,\n        ast: false,\n        astalt: false,\n        urea: false,\n        glucose: false,\n        il6: false,\n        alt40Yes: false,\n        alt40No: false,\n        astYes: false,\n        astNo: false,\n        dyspneaYes: false,\n        dyspneaNo: false,\n        leukoYes: false,\n        leukoNo: false,\n        ddimerYes: false,\n        ddimerNo: false,\n        ferritinYes: false,\n        ferritinNo: false,\n        ldhYes: false,\n        ldhNo: false,\n        ptYes: false,\n        ptNo: false,\n        crYes: false,\n        crNo: false,\n        hstropYes: false,\n        hstropNo: false,\n        tempYes: false,\n        tempNo: false,\n        ageYes: false,\n        ageNo: false,\n        procalYes: false,\n        procalNo: false\n    }\n\n    prepareProps = () => {\n        let selected = this.state.displayValue\n        if (selected === \"Mortality\") {\n            return mortalityStudy\n        } else if (selected === \"ICU\") {\n            return icuStudy\n        } else {\n            return ardsStudy\n        }\n    }\n\n    toggleShow = (componentName) => {\n        let slug = \"show\" + componentName\n\n        this.setState(prevState => {\n            return {\n                [slug]: !prevState[slug]\n            }\n        })\n    }\n\n    setColor = (ratio, stateName, protective = false) => {\n        let bgcolor = \"white\"\n\n        if (this.state[stateName]) {\n            switch (ratio) {\n                case \"?\":\n                    break\n                case \"Insignificant\":\n                case \"Excluded\":\n                    bgcolor = \"lightgrey\"\n                    break\n                default:\n                    bgcolor = protective ? \"lightgrey\" : \"lightgrey\"\n            }\n        }\n        return bgcolor\n    }\n\n    handleYNClick = (title, value) => {\n\n        let yes = title + \"Yes\";\n        let no = title + \"No\";\n        let points;\n        let element = this.state.data[0][1].find(element => element.stateName === title) || this.state.data[1][1].find(element => element.stateName === title)\n\n        if (value === \"Y\") {\n            points = (element.pointsNo * -1) + element.pointsYes\n            if (this.state[no] === true) {\n                this.setState(prevState => {\n                    return {\n                        [title]: true,\n                        [yes]: true,\n                        [no]: false,\n                        counter: prevState.counter + points\n                    }\n                }, () => console.log(`state of ${title}`, this.state[title], `state of ${no}`, this.state[no], `state of ${yes}`, this.state[yes]))\n            } else if (this.state[yes] === true) {\n                points = element.pointsYes * -1\n                this.setState(prevState => {\n                    return {\n                        [title]: false,\n                        [yes]: false,\n                        [no]: false,\n                        counter: prevState.counter + points\n                    }\n                }, () => console.log(`state of ${title}`, this.state[title], `state of ${no}`, this.state[no], `state of ${yes}`, this.state[yes]))\n            } else if (this.state[yes] === false) {\n                points = element.pointsYes\n                this.setState(prevState => {\n                    return {\n                        [title]: true,\n                        [yes]: true,\n                        [no]: false,\n                        counter: prevState.counter + points\n                    }\n                }, () => console.log(`state of ${title}`, this.state[title], `state of ${no}`, this.state[no], `state of ${yes}`, this.state[yes]))\n            } else {\n                console.log(\"iossue\");\n            }\n        } else if (value === \"N\") {\n            if (this.state[no] === true) {\n                points = element.pointsNo * -1\n                this.setState(prevState => {\n                    return {\n                        [title]: false,\n                        [yes]: false,\n                        [no]: false,\n                        counter: prevState.counter + points\n                    }\n                }, () => console.log(`state of ${title}`, this.state[title], `state of ${no}`, this.state[no], `state of ${yes}`, this.state[yes]))\n            } else if (this.state[yes] === true) {\n                points = (element.pointsYes * -1) + element.pointsNo\n                this.setState(prevState => {\n                    return {\n                        [title]: true,\n                        [yes]: false,\n                        [no]: true,\n                        counter: prevState.counter + points\n                    }\n                }, () => console.log(`state of ${title}`, this.state[title], `state of ${no}`, this.state[no], `state of ${yes}`, this.state[yes]))\n            } else if (this.state[yes] === false) {\n                points = element.pointsNo\n                this.setState(prevState => {\n                    return {\n                        [title]: true,\n                        [yes]: false,\n                        [no]: true,\n                        counter: prevState.counter + points\n                    }\n                }, () => console.log(`state of ${title}`, this.state[title], `state of ${no}`, this.state[no], `state of ${yes}`, this.state[yes]))\n            } else {\n                console.log(\"problem with the conditional on N branch\");\n            }\n        }\n    }\n\n    handleClick = (title, value) => {\n        let points;\n\n        const element = this.state.data.flat().flat().find(element => element.stateName === title)\n        if (value[0] === false || value[0] === \"undefined\") { \n            if (typeof (element.points) === \"undefined\" || isNaN(element.points)) {\n                points = 0\n            } else {\n                points = element.points\n            }\n        } else { //unclicked\n            if (typeof (element.points) === \"undefined\" || isNaN(element.points)) {\n                points = 0\n            } else { //its child is clicked\n                if (this.state[title + \"Yes\"]) {\n                    points = element.pointsYes * -1\n                }\n                else if (this.state[title + \"No\"]) {\n                    points = element.pointsNo * -1\n                }\n                else {\n                    points = element.points * -1\n                }\n            }\n        }\n\n        if (isNaN(points)) {\n            points = 0\n        }\n\n        this.setState(prevState => {\n            return {\n                [title + \"Yes\"]: prevState[title + \"Yes\"] && !prevState[title], //changes the child's state based on the parent's\n                [title + \"No\"]: prevState[title + \"No\"] && !prevState[title],\n                [title]: !prevState[title],\n                counter: prevState.counter + points,\n            }\n        })\n    }\n\n    handleDisplay = (newdisplayValue) => {\n        if (newdisplayValue === \"Mortality\") {\n            this.setState({\n                displayValue: newdisplayValue,\n                data: mortality,\n            }, () => this.calculateCount(this.state.data, this.state, [\"dyspneaYes\", \"leukoYes\", \"ddimerYes\", \"ferritinYes\", \"ldhYes\", \"ptYes\", \"crYes\", \"hstropYes\", \"alt40Yes\"]))\n        } else if (newdisplayValue === \"ICU\") {\n            this.setState({\n                displayValue: newdisplayValue,\n                data: icu,\n            }, () => this.calculateCount(this.state.data, this.state, [\"procalYes\"]))\n        } else if (newdisplayValue === \"ARDS\") {\n\n            this.setState({\n                displayValue: newdisplayValue,\n                data: ards,\n            }, () => this.calculateCount(this.state.data, this.state, [\"ageYes\", \"tempYes\", \"astYes\"]))\n        } else {\n            this.setState({\n                displayValue: newdisplayValue,\n                data: ardsDeath,\n            }, () => this.calculateCount(this.state.data, this.state, [\"ageYes\", \"ardsDeath_tempYes\", \"astYes\"]))\n        }\n    }\n\n    calculateCount = (data, state, secondaryStates) => {\n        let count = 0\n        data[0][1].map(factor => {\n            return count = count + (state[factor.stateName] ? factor.points : 0)\n        })\n        data[1][1].map(factor => {\n            return count = count + (state[factor.stateName] ? factor.points : 0)\n        })\n        secondaryStates.map(factor => {\n            if (factor === \"ardsDeath_tempYes\") {\n                return count = count + (state[\"tempYes\"] ? -1 : 0)\n            }\n            else {\n                return count = count + (state[factor] ? 1 : 0)\n            }\n        })\n        this.setState({\n            counter: count\n        })\n    }\n\n    numberOfLabs = () => {\n        let basicNumber = this.state.data[0][1].filter(object => !object.ratio.includes(\"Excluded\") && !object.ratio.includes(\"Insignificant\")).length\n\n        let advancedNumber = this.state.data[1][1].filter(object => !object.ratio.includes(\"Excluded\") && !object.ratio.includes(\"Insignificant\")).length\n\n        let sum = basicNumber + advancedNumber\n\n        return sum\n    }\n\n    render() {\n        let { counter, displayValue, data } = this.state\n\n        return (\n            <main>\n                <SortContainer\n                    handleDisplay={this.handleDisplay}\n                    counter={counter}\n                    selected={displayValue}\n                    sum={this.numberOfLabs()}\n                    toggleShow={this.toggleShow}\n                    showHowTo={this.state.showHowTo}\n                />\n                <FormContainer\n                    basicData={data[0][1]}\n                    advancedData={data[1][1]}\n                    handleClick={this.handleClick}\n                    handleYNClick={this.handleYNClick}\n                    state={this.state}\n                    setColor={this.setColor}\n                />\n                {\n                    this.state.showStudyLegend\n                        ?\n                        <>\n                            <StudyLegend study={this.prepareProps()} />\n                            <Button variant=\"link\" onClick={() => this.toggleShow(\"StudyLegend\")}>Hide Legend</Button>\n                        </>\n                        :\n                        <div>\n                            <Button variant=\"link\" onClick={() => this.toggleShow(\"StudyLegend\")}>Show Legend</Button>\n                        </div>\n                }\n            </main>\n        )\n    }\n}\n\nexport default MainContainer\n"]},"metadata":{},"sourceType":"module"}